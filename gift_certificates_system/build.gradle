plugins {
    id 'org.springframework.boot' version '2.4.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "org.sonarqube" version "3.0"
}

group 'com.epam.esm'
version '1.0'

allprojects {
    apply plugin: "jacoco"
    apply plugin: "org.sonarqube"

    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'war'

    ext.springBootVersion = '2.4.2'

    compileJava {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
        options.encoding = 'UTF-8'
    }
    compileTestJava.options.encoding = "UTF-8"

    ext {
        springVersion = '5.3.2'
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"

    }

    test {
        task copyReport(type: Copy) {
            from "build/test-results"
            into "$rootDir/test-results"
        }

        useJUnitPlatform()
        finalizedBy copyReport
        finalizedBy jacocoTestReport
    }
}

task codeCoverageReport(type: JacocoReport) {

    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        html.enabled false
        csv.enabled false
    }
}

codeCoverageReport.dependsOn {
    subprojects*.test
}

sonarqube {
    properties {
        property "sonar.host.url", "http://localhost:9000"
        property 'sonar.projectName', 'gift_certificates'
        property 'sonar.projectKey', 'gift_certificates'
        property 'sonar.login', 'b1bc6990ef97613ac4b77c21e4ae7aa9879cb101'
        property 'sonar.core.codeCoveragePlugin', 'jacoco'
        property 'sonar.coverage.jacoco.xmlReportPaths', "${rootDir}/build/reports/jacoco/codeCoverageReport/codeCoverageReport.xml"
    }
}

